<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="gw-web-boss" version="2.5">
    <display-name>Archetype Created Web Application</display-name>


    <!-- 配置Spring Ioc配置文件路径 -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/spring-config.xml</param-value>
    </context-param>

    <!--
   配置ContextLoaderListener用以初始化Spring Ioc容器
  ContextLoaderListener的作用就是启动Web容器时，自动装配ApplicationContext.xml的配置信息。
  因为它实现了ServletContextListener这个接口，
  在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。
  -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <description>springMVC初始化servlet</description>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Servlet拦截配置 -->
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <filter>
        <description>字符编码过滤，tomcat的话需要配置tomcat的setting.xml的编码</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>

        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--&lt;!&ndash; 自定义过滤器：myFilter &ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>myFilter</filter-name>-->
        <!--<filter-class>web.app.filter.MyFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>myFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--&lt;!&ndash; 自定义过滤器：testFilter2 &ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>myFilter2</filter-name>-->
        <!--<filter-class>web.app.filter.MyFilter2</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>myFilter2</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->


</web-app>

